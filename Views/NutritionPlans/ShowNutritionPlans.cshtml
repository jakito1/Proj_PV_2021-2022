@model PaginatedList<NutriFitWeb.Models.NutritionPlan>
@using NutriFitWeb.Services
@using Microsoft.AspNetCore.Identity
@inject UserManager<UserAccountModel> UserManager
@inject IHasTrainerOrNutritionist HasTrainerOrNutritionist
@{
    ViewData["Title"] = "Planos de Nutrição";
}

<h1>@ViewData["Title"] <img class="iconMargin" src="~/icons/leafIcon.svg" alt="leafIcon"/></h1>

@if (User.IsInRole("nutritionist"))
{
    <div class="titlesMargin">
        <form asp-action="ShowNutritionPlans" method="get">
            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Email do cliente/Nome do plano" class="searchBar" />
            <button type="submit" class="searchBtn"><img class="searchIcon" src="~/icons/searchIcon.svg" alt="searchIcon" /></button>
            <a class="createBtn" asp-action="CreateNutritionPlan">Criar plano</a>
        </form>
        
    </div>
}
else if (User.IsInRole("client"))
{
    <div class="titlesMargin">
        <form asp-action="ShowNutritionPlans" method="get">
            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Insira o nome do plano" class="searchBar" />
            <button type="submit" class="searchBtn"><img class="searchIcon" src="~/icons/searchIcon.svg" alt="searchIcon" /></button>
            @if (User.Identity is not null && !await HasTrainerOrNutritionist.ClientHasNutritionist(User.Identity.Name))
            {
                <a class="createBtn" asp-controller="Clients" asp-action="RequestNutritionist" 
                asp-route-pageNumber="@(Model.PageIndex)" asp-route-currentFilter="@ViewData["CurrentFilter"]">Requisitar Nutricionista</a>
            }
            <a class="createBtn" asp-action="CreateNutritionPlan">Criar plano</a>
        </form>
    </div>
}

<table class="table">
    <thead class="tableHeader">
        <tr>
            <th>
                Nome
            </th>
            <th>
                Descrição
            </th>
            @if (User.IsInRole("nutritionist"))
            {
                <th>
                    Cliente
                </th>
            }
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <p class="details">@Html.DisplayFor(modelItem => item.NutritionPlanName)</p>
                </td>
                <td>
                    @if (item.NutritionPlanDescription is null || item.NutritionPlanDescription == "")
                    {
                        <p class="details"><b>N/A</b></p>
                    }
                    else
                    {
                        string description = item.NutritionPlanDescription;
                        if (description.Length > 20)
                        {
                            description = description.Substring(0, 20);
                            <p class="details"><b>@description...</b></p>
                        }else{
                            <p class="details"><b>@description</b></p>
                        }
                    }
                </td>
                @if (User.IsInRole("nutritionist"))
                {
                    if (item.Client is not null)
                    {
                        <td>
                            <p class="details">@Html.DisplayFor(modelItem => item.Client.UserAccountModel.Email)</p>
                        </td>
                    }
                    else
                    {
                        <td>
                            <p class="details"><b>N/A</b></p>
                        </td>
                    }
                }

                <td>
                    <a asp-action="EditNutritionPlan" asp-route-id="@item.NutritionPlanId"><img class="editIcon" src="~/icons/editProfileIcon.svg" /></a>
                    <a asp-action="NutritionPlanDetails" asp-route-id="@item.NutritionPlanId"><img class="detailsIcon icons" src="~/icons/detailsIcon.svg" /></a>
                    <a asp-action="DeleteNutritionPlan" asp-route-id="@item.NutritionPlanId"><img class="removeIcon icons" src="~/icons/removeIcon.svg" /></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="pagesDiv">
    @if (prevDisabled != "disabled")
    {
        <a asp-action="ShowNutritionPlans"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
            <b>Anterior</b>
        </a>
    }

    @if (nextDisabled != "disabled")
    {
        <a asp-action="ShowNutritionPlans"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
            <b>Próximo</b>
        </a>
    }

    @if (prevDisabled == "disabled" && nextDisabled == "disabled")
    {
        <p class="noMoreResults">Não existem mais resultados</p>
    }
</div>

@if (!string.IsNullOrEmpty((string)ViewData["CurrentFilter"]))
{
    <div class="backBtnDiv">
        <a asp-action="ShowNutritionPlans" class="backToListBtn">Voltar</a>
    </div>
}