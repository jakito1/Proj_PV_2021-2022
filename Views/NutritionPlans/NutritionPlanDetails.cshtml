@model NutriFitWeb.Models.NutritionPlan

@{
    ViewData["Title"] = "Detalhes do Plano de Nutrição";
}

<h1>@ViewData["Title"]</h1>
<div class="col-md-12 profileDivs exercisesDiv">
         <table class="formTables">
            <tr>
                @if (User.IsInRole("client") && Model.Nutritionist is not null)
                {
                    <th><p class="control-label">Nutricionista</p></th>
                    <td>
                        <p class="details">@Html.DisplayFor(model => model.Nutritionist.UserAccountModel.UserName)</p>
                    </td>       
                }
                @if (User.IsInRole("nutritionist") && Model.Client is not null)
                {
                    <th class="control-label alignTableTitles">Cliente</th>
                    <td>
                        <p class="details">@Html.DisplayFor(model => model.Client.UserAccountModel.UserName)</p>
                    </td> 
                }
            </tr>
            <tr>
                <th class="control-label">Nome</th>
                <td>
                    <p>@Html.DisplayFor(model => model.NutritionPlanName)</p>
                </td>
            </tr>
            <tr>
                <th class="control-label">Descrição</th>
                <td>
                    @if (Model.NutritionPlanDescription is null || Model.NutritionPlanDescription == "")
                    {
                        <p class="details">N/A</p>
                    }else{
                        <p class="details">@Html.DisplayFor(model => model.NutritionPlanDescription)</p>
                    }
                </td>
            </tr>
        </table>
    <div id="_ShowMealsPartialList" class="mealDetailsDiv">
        <partial name="~/Views/Meals/_ShowMealsDetailsPartial.cshtml" model=@Model.Meals />
    </div>
</div>
<div class="backBtnDiv">
    <a asp-action="ShowNutritionPlans" class="backToListBtn">Voltar</a>
</div>


@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}