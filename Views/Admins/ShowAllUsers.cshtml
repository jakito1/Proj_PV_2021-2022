@model PaginatedList<NutriFitWeb.Models.UserAccountModel>
@using NutriFitWeb.Services

@inject IIsUserInRoleByUserId IsUserInRoleByUserId

@{
    ViewData["Title"] = "ShowAllUsers";
}

<h1>Lista de Utilizadores <img class="iconMargin" src="~/icons/clientIcon.svg" alt="clientsIcon" /></h1>

<input type="submit" value="Ajuda" class="helpBtn" onclick="helpButton()" />

<div class="col-md-4 helpDivs" style="display:none;" id="helpText">
    <p>Aqui pode ver todos os utilizadores da aplicação. Pode <b>desativar contas</b>, <b>editar</b> dados de <b>perfil</b> e dados de <b>conta</b>.</p>
</div>

<form asp-action="ShowAllUsers" method="get">
    <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Insira o email do utilizador" class="searchBar" />
    <button type="submit" class="searchBtn"><img class="searchIcon" src="~/icons/searchIcon.svg" alt="searchIcon" /></button>
</form>
@foreach (var item in Model)
{

    <div class="listsDiv">
        <p class="listsItem"><b class="listsItem listsItemTitle showListsBorder allUsersTitleFix">UserName </b> &nbsp; @Html.DisplayFor(modelItem => item.UserName)</p>
        <p class="listsItem"><img src="~/icons/emailIcon.svg"/> @Html.DisplayFor(modelItem => item.Email)</p>
        <div class="listsItem">
            <a asp-action="DeleteUserAccount" asp-route-id="@item.Id"><img class="removeIcon icons" src="~/icons/removeIcon.svg" alt="removeIcon" /></a>

            <a asp-action="EditUserSettings" asp-route-id="@item.Id"><img class="editProfileIcon icons" src="~/icons/editIcon.svg" alt="editIcon" /></a>

            @if (await IsUserInRoleByUserId.IsUserInRoleByUserIdAsync(item.Id, "client"))
            {
                <a asp-controller="Clients" asp-action="EditClientSettings" asp-route-id="@item.Id">
                    <img class="editIcon" src="~/icons/editProfileIcon.svg" alt="editProfileIcon" />
                </a>
            }
            @if (await IsUserInRoleByUserId.IsUserInRoleByUserIdAsync(item.Id, "nutritionist"))
            {
                <a asp-controller="Nutritionists" asp-action="EditNutritionistSettings" asp-route-id="@item.Id">
                    <img class="editIcon" src="~/icons/editProfileIcon.svg" alt="editProfileIcon" />
                </a>
            }
            @if (await IsUserInRoleByUserId.IsUserInRoleByUserIdAsync(item.Id, "trainer"))
            {
                <a asp-controller="Trainers" asp-action="EditTrainerSettings" asp-route-id="@item.Id">
                    <img class="editIcon" src="~/icons/editProfileIcon.svg" alt="editProfileIcon" />
                </a>
            }
            @if (await IsUserInRoleByUserId.IsUserInRoleByUserIdAsync(item.Id, "gym"))
            {
                <a asp-controller="Gyms" asp-action="EditGymSettings" asp-route-id="@item.Id">
                    <img class="editIcon" src="~/icons/editProfileIcon.svg" alt="editProfileIcon" />
                </a>
            }
        </div>
    </div>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="pagesDiv">
    @if (prevDisabled != "disabled")
    {
        <a asp-action="ShowAllUsers"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
            <b>Anterior</b>
        </a>
    }

    @if (nextDisabled != "disabled")
    {
        <a asp-action="ShowAllUsers"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
            <b>Próximo</b>
        </a>
    }

    @if (prevDisabled == "disabled" && nextDisabled == "disabled")
    {
        <p class="noMoreResults">Não existem mais resultados</p>
    }
</div>

@if (!string.IsNullOrEmpty(ViewData["CurrentFilter"] as string))
{
    <div class="backBtnDiv">
        <a asp-action="ShowAllUsers" class="backToListBtn">Voltar</a>
    </div>
}

