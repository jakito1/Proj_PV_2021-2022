@model NutriFitWeb.Models.TrainingPlan
@using Microsoft.AspNetCore.Identity
@inject UserManager<UserAccountModel> UserManager
@{
    ViewData["Title"] = "Criar plano de treino";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="col-md-12 profileDivs">
    <form asp-controller="TrainingPlans" asp-action="CreateTrainingPlan">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <input type="submit" value="Criar" class="btn btn-primary createBtn" />
        </div>
        <div>
            <label asp-for="TrainingPlanName" class="control-label">Nome &emsp; &ensp;</label>
            <input asp-for="TrainingPlanName" class="formsInput nameInput" />
            <br />
            <span asp-validation-for="TrainingPlanName" class="text-danger"></span>
        </div>
        <div>
            <label asp-for="TrainingPlanDescription" class="control-label">Descrição &nbsp;</label>
            <textarea asp-for="TrainingPlanDescription" class="descriptionBox">Insira uma descrição (opcional)</textarea>
            <span asp-validation-for="TrainingPlanDescription" class="text-danger"></span>
        </div>
        @if (User.IsInRole("trainer"))
        {
            <div>
                <label asp-for="ClientEmail" class="control-label">Cliente &emsp; &nbsp;</label>
                <input required="true" asp-for="ClientEmail" class="formsInput" />
                <br />
                <span asp-validation-for="ClientEmail" class="text-danger"></span>
            </div>
        }

    </form>
    <div id="_CreateExercisePartialItem">
        <partial name="~/Views/Exercises/_CreateExercisePartial.cshtml" />
    </div>
    <div id="_ShowExercisesPartialList">
        <partial name="~/Views/Exercises/_ShowExercisesPartial.cshtml" />
    </div>
</div>
<div>
    <a class="backToListBtn" asp-action="ShowTrainingPlans">Voltar</a>
</div>

@section Scripts {
<script>
    function UpdateExercisesList() {
            $.ajax({
                url: "@Url.Action("ShowExercisesList", "Exercises")",
                type: "GET",
                datatype: "HTML",
                success: function (data) {
                    $('#_CreateExercisePartialForm').removeData('validator');
                    $('#_CreateExercisePartialForm').removeData('unobtrusiveValidation');
                    $.validator.unobtrusive.parse('#_CreateExercisePartialForm');
                    $("#_ShowExercisesPartialList").html(data);
                }
            })
        }
    function UpdateCreateExercise() {
            $.ajax({
                url: "@Url.Action("GetCleanCreateExercisePartial", "Exercises")",
                type: "GET",
                datatype: "HTML",
                success: function (data) {  
                    $("#_CreateExercisePartialItem").html(data);
                }
            })
        }
    function limitExerciseRepetitions(input) {
        if (Math.abs(input.value) > 0) {
            input.value = Math.abs(input.value);
        } else {
            input.value = null;
        }
        if (Math.abs(input.value) > 999) {
            input.value = 999
        }
    }
    function limitExerciseDuration(input) {
        if (Math.abs(input.value) > 0) {
            input.value = Math.abs(input.value);
        } else {
            input.value = null;
        }
        if (Math.abs(input.value) > 120) {
            input.value = 120
        }
    }
</script>
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
