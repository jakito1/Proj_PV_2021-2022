@model PaginatedList<NutriFitWeb.Models.TrainingPlan>
@using NutriFitWeb.Services
@using Microsoft.AspNetCore.Identity
@inject UserManager<UserAccountModel> UserManager

@***REMOVED***
    ViewData["Title"] = "Planos de Treino";
***REMOVED***

<h1>@ViewData["Title"]</h1>

@if (User.IsInRole("trainer"))
***REMOVED***
    <div class="titlesMargin">
        <form asp-action="ShowTrainingPlans" method="get">
            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Insira o email do cliente ou nome do plano" class="searchBar"/>
            <button type="submit" class="searchBtn"><img class="searchIcon" src="~/icons/searchIcon.svg" alt="searchIcon"/></button>
        </form>
        <a class="backToListBtn" asp-action="CreateTrainingPlan">Criar novo plano</a>
    </div>
***REMOVED*** else if (User.IsInRole("client"))
***REMOVED***
    <div class="titlesMargin">
        <form asp-action="ShowTrainingPlans" method="get">
            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Insira o nome do plano" class="searchBar"/>
            <button type="submit" class="searchBtn"><img class="searchIcon" src="~/icons/searchIcon.svg" alt="searchIcon"/></button>
        </form>
        <a class="backToListBtn" asp-action="CreateTrainingPlan">Criar novo plano</a>
    </div>
***REMOVED***

<table class="table tableHead">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th>
                Descrição
            </th>
            @if (User.IsInRole("trainer"))
            ***REMOVED***
                <th>
                    Cliente
                </th>
        ***REMOVED***           
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) ***REMOVED***
        <tr>
            <td>
                <p class="details">@Html.DisplayFor(modelItem => item.TrainingPlanName)</p>
            </td>
            <td>
                @if (item.TrainingPlanDescription == null || item.TrainingPlanDescription == "")
                    ***REMOVED***
                        <p class="details"><b>N/A</b></p>
                ***REMOVED***else***REMOVED***
                        
                        string description = item.TrainingPlanDescription;
                        if (description.Length > 40)
                        ***REMOVED***
                            description = description.Substring(0, 40);
                            <p class="details"><b>@description...</b></p>
                    ***REMOVED***        
                ***REMOVED***                  
            </td>
                @if (User.IsInRole("trainer"))
                ***REMOVED***
                    if (item.Client != null)
                    ***REMOVED***
                        <td>
                            <p class="details">@Html.DisplayFor(modelItem => item.Client.UserAccountModel.Email)</p>
                        </td>
                ***REMOVED***
                    else
                    ***REMOVED***
                        <td>
                             <p class="details"><b>N/A</b></p>
                        </td>
                ***REMOVED***
            ***REMOVED***
                
            <td>
                <a asp-action="EditTrainingPlan" asp-route-id="@item.TrainingPlanId"><img class="editIcon" src="~/icons/editProfileIcon.svg"/></a> 
                <a asp-action="TrainingPlanDetails" asp-route-id="@item.TrainingPlanId"><img class="detailsIcon icons" src="~/icons/detailsIcon.svg"/></a> 
                <a asp-action="DeleteTrainingPlan" asp-route-id="@item.TrainingPlanId"><img class="removeIcon icons" src="~/icons/removeIcon.svg"/></a>
            </td>
        </tr>
***REMOVED***
    </tbody>
</table>

@***REMOVED***
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
***REMOVED***
<div class="pagesDiv">
    @if (prevDisabled != "disabled")
    ***REMOVED***
        <a asp-action="ShowTrainingPlans"
        asp-route-pageNumber="@(Model.PageIndex - 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-default @prevDisabled">
            <b>Anterior</b>
        </a>
***REMOVED***

    @if (nextDisabled != "disabled")
    ***REMOVED***
        <a asp-action="ShowTrainingPlans"
        asp-route-pageNumber="@(Model.PageIndex + 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-default @nextDisabled">
            <b>Próximo</b>
        </a>   
***REMOVED***

    @if(prevDisabled == "disabled" && nextDisabled == "disabled")
    ***REMOVED***
        <p class="noMoreResults">Não existem mais resultados</p>
***REMOVED***
</div>

    @if (!string.IsNullOrEmpty((string)ViewData["CurrentFilter"]))
    ***REMOVED***
        <div class="backBtnDiv"> 
            <a asp-action="ShowTrainingPlans" class="backToListBtn">Voltar</a>
        </div>
***REMOVED***
